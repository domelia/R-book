[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R в социологических исследованиях",
    "section": "",
    "text": "В качестве предисловия…\nЭто электронное пособие написано для магистрантов, обучающихся по направлению…"
  },
  {
    "objectID": "lesson1.html",
    "href": "lesson1.html",
    "title": "1  Основные сведения об R",
    "section": "",
    "text": "2 Кое-что еще о разработчиках R\nКроме основной команды, в сообществе R выделяются талантливые программисты, которые разрабатывают библиотеки, без преувеличения производящие революцию в обработке и анализе данных. Это настоящие гуру, которых очень уважают в исследовательском сообществе, их имена знают все, кто работает в R. Ну, или почти все…\nТОП-3 по личному и очень субъективному мнению автора, которое основывается на его собственном опыте и может не совпадать с другими оценками, включает следующих разработчиков:\n1. Каким языком является R?\n2. Может ли R быть интегрирована с Hadoop для обработки больших данных? TRUEFALSE\n3. На основе какого языка создан R?"
  },
  {
    "objectID": "lesson1.html#что-такое-r",
    "href": "lesson1.html#что-такое-r",
    "title": "1  Основные сведения об R",
    "section": "1.1 Что такое R?",
    "text": "1.1 Что такое R?\nR – это язык программирования и свободная программная среда для статистической обработки и визуализации данных.\nНесмотря на наличие огромного количества языков и различных программ для статистической обработки данных, R в течение двух десятилетий остается популярным языком и средой обработки и анализа данных для специалистов из разных областей знания.\nПозиции языка R как средства разработки среди других языков программирования довольно высоки. Так, по данным индекса Tiobe за 2022 год, R занимает 12-е место в мире:\n\nОднако, прежде всего, это язык, который используют ученые, специалисты, работающие в различных отраслях экономики, менеджеры для анализа реальных данных и разработки научно обоснованных систем принятия решений, поэтому место в общем рейтинге не так высоко. Если посмотреть сферы использования, то на первом месте - академическая среда, на втором - сфера здравоохранения, на третьем - правительственные учреждения.\n\nR используют банки и маркетинговые агентства, технические компании и информационные гиганты для разных целей - от обработки данных до прогнозирования и представления интерактивной инфографики.\nВот только небольшой список тех компаний, которые используют R в своей деятельности."
  },
  {
    "objectID": "lesson1.html#немного-истории",
    "href": "lesson1.html#немного-истории",
    "title": "1  Основные сведения об R",
    "section": "1.2 Немного истории",
    "text": "1.2 Немного истории\nR был создан профессорами Россом Айхэка и Робертом Джентельменом (Ross Ihaka и Robert Gentleman) в 1992 году, сначала как язык программирования для обучения студентов статистике в университете Окленда (Новая Зеландия). Авторы вдохновлялись при создании языком S, используемым в лаборатории Bell, и ради шутки назвали язык R - по первым буквам собственных имен.\nВ июне 1995 года статистик Мартин Махлер убедил Айхэку и Джентельмена опубликовать R как язык со свободным исходным кодом под публичной лицензией GNU. Первая официальная версия была выпущена 29 февраля 2000 года.\nЧуть ранее, в 1997 году Куртом Хорником и Фрицем Лейшем была основана Сеть для архивирования кода R (CRAN, The Comprehensive R Archive Network), цель которой заключалась в хранении исходного кода, выполняемых файлов, документации и библиотек, создаваемых пользователями. На момент декабря 2022 года CRAN имел 103 зеркальных сервера и 18 976 библиотек.\nКоманда разработчиков (R Core Team) также была основана в 1997 году для дальнейшего развития языка. Сейчас в ней состоят ведующие разработчики, статистики, специалисты по компьютерным наукам, всего более 20 человек. В апреле 2003 года для развития проекта была создана некоммерческая организация R Foundation. Цель фонда заключается в предоставлении технической поддержки и коммуникации с создателями R, хранении и управлении технической документацией и интеллектуальной собственностью.\nПодробнее об истории создания R можно узнать из таймлайна: \nСоздатели R (Питер Далгаард - датский ученый, один из членов R Core Team):"
  },
  {
    "objectID": "lesson1.html#каковы-преимущества-r",
    "href": "lesson1.html#каковы-преимущества-r",
    "title": "1  Основные сведения об R",
    "section": "1.3 Каковы преимущества R?",
    "text": "1.3 Каковы преимущества R?\nИх довольно много:\n\nВозможности для статистической обработки, от простых функций до сложных моделей.\n\nПочти все новое, что появляется в области статистики, можно найти в одной из библиотек R. Например, ANZ банк использует R для моделирования невыплат по ипотечному кредитованию, а The Bank Of America применяет R для формирования финансовой отчетности.\n\nЭто язык программирования с открытым исходным кодом (Open-source)\n\nЧто это значит? Это значит, что, во-первых, все написанное на R открыто для изучения и критики, а, во-вторых, каждый может внести вклад в его развитие и улучшение путем создания новых библиотек и новых функций для решения различных задач.\n\nПоддержка сообщества (Community)\n\nУ R - более 2 миллионов пользователей по всему миру, сообщество пользователей R не только внушительное по размеру, но и очень активное. Каким бы ни был ваш проект - учебным или крупномасштабным, всегда найдется тот, кто поможет разобраться в коде и принять правильное решение. Вы тоже можете найти себе единомышленников и подключаться к другим проектам.\nНекоторые полезные ссылки:\n\nhttps://community.rstudio.com/\nhttps://www.r-bloggers.com/\nhttps://stackoverflow.com/questions/tagged/r\nhttps://rweekly.org/ https://www.reddit.com/r/Rlanguage/\nhttps://r.awesome-programming.com/en/awesome/r-language-02/community\n\nКоммьюнити пользователей R это совсем не Man’s World: весьма активно женское сообщество RLadies, устраивающее митапы по всему миру и продвигающее свой особый, женский, взгляд на использование R для разработки и анализа данных.\n\nОгромная коллекция библиотек и полезных функций, позволяющих расширить возможности базового языка\n\nСамые авторитетные хранятся в CRAN (Comprehensive R Archive Network), их более 10 тысяч, однако, чтобы попасть туда, необходимо, чтобы документация и код соответствовали определенным требованиям, что требует времени. До того момента, когда библиотека загружена на CRAN, она, как правило, хранится в открытом доступе, например, на github, где каждый желающий может принять участие в ее тестировании и доработке.\nПример сетевого анализа библиотек и их взаимозависимостей представлен на рисунке ниже:\n\nПримеры полезных библиотек:\n\nобработка и всевозможные манипуляции с данными (tidytverse)\nработа с большими данными (sparklyr)\nглубокое обучение (keras, TensorFlow)\nмашинное обучение (H2O)\nвизуализация данных (ggplot2)\nсоздание отчетов, итерактивная графика и обучение (Rmarkdown, shiny).\n\n\nСовместимость с другими языками программирования\n\nБольшинство функций и библиотек написаны на самом языке R. Однако, для сложных вычислительных задач, могут использоваться и другие языки, такие как C, C++, FORTRAN. Для манипуляций с объектами, возможно использование других языков - .NET, Java, Python. Иными словами, возможности программирования становятся практически безграничными.\n\nСоздание привлекательных визуализаций\n\nВ современном мире анализ данных невозможен без качественной визуализации, особенно если его результаты планируется использовать в сфере политики и бизнеса. R является одним из лучших инструментов для создания качественной графики, и такие библиотеки как ggplot2, plotly, ggvis помогут создать очень детализированные и эстетически привлекательные визуализации.\nДля пользователей R, которые только начинают изучение языка, на сайте https://r-graph-gallery.com создана галерея визуализаций, разбитых по отдельным тематикам. На основе простых и более сложных примеров можно изучить код и адаптировать его под собственные задачи.\n\n\nИнтеграция с Hadoop и анализ больших данных\n\nЕсли перед вами стоит задача анализа больших данных, то с такими библиотеками как rmr, rhdfs, rhbase, RHIVE, RHIPE и Rhadoop возможно интегрировать R и Hadoop (проект фонда Apache Software Foundation для разработки и выполнения распределённых вычислений для работы с большими данными).\nВозможности по хранению данных Hadoop и вычислительные достоинства R используют многие в качестве оптимального решения для анализа больших данных. Например, компания Форд использует R и Hadoop для обработки данных обратной связи с потребителями, что позволяет им улучшить дизайн и обосновывать бизнес решения.\n\n\nСоздание интерактивных веб-приложений\n\nС помощью R и библиотеки shiny можно создавать интерактивные приложения, с помощью которых пользователи (ученики, заказчики, журналисты и пр.) могут познакомиться с вашими данными, провести какие-то виды анализа, сделать визуализацию, возможно изучить какие-то закономерности (часто используются как обучающий инструмент). Эти приложения можно хранить на сервере Shiny или в другом доступном месте.\n\nПримеры можно посмотреть в галерее на сайте shiny: (https://shiny.posit.co/r/gallery/):\n\n\nСовместимость с другими платформами\n\nR может работать с любой конфигурацией оборудования и поддерживает различные операционные системы, независимо от окружения выдает предсказуемые и однозначные результаты.\n\nВозможность запуска кода без компилирования (возможно этот пункт стоило бы поставить на одно из первых мест)\n\nR относится к интерпретируемым языкам, что означает, что ему не требуется компилятор для того, чтобы программа заработала. Иными словами, все команды, которые мы вводим, сразу же выполняются, без дополнительного компилирования (сборки), как это происходит в других языках, например в C, COBOL, Delphi или Fortran. Другими возможностями, которыми обладают интерпретируемые языки, являются кросс-платформенность (способность работать в разных операционных системах и аппаратных средах), простота тестирования и отладки программ.\n\nНапример, Если мы создадим несколько строк кода и запустим их, они выполнятся немедленно и мы увидим результат:\n\nКроме этих преимуществ есть и много других, о которых мы узнаем в процессе изучения курса.\nК слову сказать, данное пособие также создано с помощью R. При его создании использовались возможности open-source системы публикации научной и технической информациии Quarto."
  },
  {
    "objectID": "lesson2.html#установка-r",
    "href": "lesson2.html#установка-r",
    "title": "2  Установка и начало работы с R",
    "section": "2.1 Установка R",
    "text": "2.1 Установка R\nПрежде, чем начать работать с R нам нужно установить его себе на компьютер. Для этого необходимо перейти по ссылке и выбрать версию, подходящую для вашей операционной системы (ссылка ниже ведет на версию для Windows): https://cran.r-project.org/bin/windows/base/\nВместе с R устанавливается небольшая консоль, в которой можно набирать команды на R, но работать в ней не очень удобно, поэтому большинство пользователей предпочитает работать со специальным интерфейсом, или интегрированной средой разработки (Integrated Development Environement, IDE). Наиболее популярной IDE является RStudio (с другими средами, в которых можно работать в R, такими как Visual Studio, Emacs, Eclipse и другими, Вы можете познакомиться самостоятельно).\nЭто бесплатная программа, скачать которую можно по ссылке.\nhttps://posit.co/products/open-source/rstudio/\nШаги по установке не очень трудны и не потребуют каких-то особых навыков, но на всякий случай, можно обратиться к однму из обучающих видео:\nКак установить R:\n\nКак установить RStudio:\n\n\n\n\n\n\n\nУведомление\n\n\n\nВ комьютерных классах устанавливать ничего не нужно, эти инструкции пригодятся для домашнего использования.\n\n\n\n\n\n\n\n\nRStudio online\n\n\n\nКроме “стационарного” использования RStudio, компания Posit предоставляет возможность использования облачных технологий для работы с RStudio онлайн. Бесплатный план позволяет создать до 25 проектов и предоставляет 25 часов в месяц вычислительного времени. Этого будет достаточно для наших учебных проектов. Для получения доступа к Posit Cloud необходимо зарегистрироваться на сайте https://posit.cloud/ или войти с помощью социальных сетей и создать новый проект."
  },
  {
    "objectID": "lesson2.html#начало-работы-с-r-и-rstudio",
    "href": "lesson2.html#начало-работы-с-r-и-rstudio",
    "title": "2  Установка и начало работы с R",
    "section": "2.2 Начало работы с R и RStudio",
    "text": "2.2 Начало работы с R и RStudio\nПосле первого запуска RStudio вы, скорее всего, увидите вот такую картину:\n\nОсновное окно RStudio будет состоять из трех частей (экранов).\nСлева находится консоль (Console) - здесь можно писать код, и здесь же будут появляться результаты его выполнения, а также различные сообщения, с помощью которых R “общается” с пользователями.\nСправа сверху - рабочее окружение (Environment) - здесь хранятся создаваемые и загружаемые объекты - данные (вектора, датафреймы и пр.), пользовательские функции и некоторые другие объекты.\nОкружение является структурой данных, предназначенной для обеспечения области видимости. Это коллекция каких-то объектов (переменных, функций, массивов данных), которые мы используем. Хэдли Уикхэм предлагает относиться к окружению как к “мешку с именами”, :\n\nЕсть четыре типа окружений:\n\nГлобальное окружение - интерактивное пространство, где мы обычно работаем.\nБазовое окружение, создаваемое базовым пакетом R.\nПустое окружение, не имеющее никаких имен. Является в большей степени абстракцией, хотя и может быть создано с помощью специальной функции.\nТекущее окружение, то есть то, в котором мы работаем в какой-то момент времени.\nОбычно мы не задумываемся над тем, в каком окружении работаем. Это становится важным тогда, когда возникают конфликты функций и ошибки выполняемого кода. Окружение создается автоматически при запуске программы RStudio.\n\nВ этом же окне можно посмотреть историю (History) выполнения кода, и если вы случайно или специально что-то удалили, часто именно в истории можно найти строки, которые были выполнены, и их можно восстановить. Здесь есть некоторые другие вкладки, они нам понадобятся на более поздних этапах работы с R и RStudio.\nСправа снизу - окно просмотра. В отдельных вкладках можно посмотреть, какие файлы и папки есть в рабочей директории, какие библиотеки установлены, можно запросить помощь или посмотреть графики (в процессе анализа).\nЭто только в первый раз окна всего три.\nВыберите в меню File - New File - R Script:\n\nОткроется новый файл, и окон станет четыре:\n\nВ этом новом окне можно писать код и комментарии, сохранять его как отдельный файл с расширением .R, который можно запускать повторно, что очень удобно и позволяет значительно сохранить время при рутинной обработке данных. Очень часто в ходе обработки и анализа данных приходится осуществлять повторяющиеся действия, и скрипт поможет ускорить процесс обработки. В этом состоит основное отличие от консоли, где код можно запустить только однажды."
  },
  {
    "objectID": "lesson2.html#первые-простые-действия-в-r",
    "href": "lesson2.html#первые-простые-действия-в-r",
    "title": "2  Установка и начало работы с R",
    "section": "2.3 Первые простые действия в R",
    "text": "2.3 Первые простые действия в R\nДавайте создадим наш первый скрипт и сохраним его для истории 😄:\n\nВыбрать в меню File - New File - R Script (если Вы этого еще не сделали) или нажать Ctrl + Shift + N.\nНаписать код, выполняющий простые арифметические действия:\n\n\n1+1\n\n[1] 2\n\n\n\n\n\n\n\n\nУведомление\n\n\n\n\n\n\nОператор\nОписание\n\n\n+\nсложение\n\n\n-\nвычитание\n\n\n*\nумножение\n\n\n/\nделение\n\n\n^ или **\nвозведение в степень\n\n\nx %% y\nостато от деления (x mod y) 5%%2 = 1\n\n\nx %/% y\nцелая часть при делени 5%/%2 =2\n\n\n\n\n\n\nНаписать код, отображающий текстовое сообщение:\n\n\n\"Привет, Алтайский государственный университет!\"\n\n[1] \"Привет, Алтайский государственный университет!\"\n\n\n\nСохранить файл."
  },
  {
    "objectID": "lesson2.html#работа-с-библиотеками",
    "href": "lesson2.html#работа-с-библиотеками",
    "title": "2  Установка и начало работы с R",
    "section": "2.4 Работа с библиотеками",
    "text": "2.4 Работа с библиотеками\nМы уже выяснили, что базовый язык R в настоящее время используется наряду с многочисленными функциями и библиотеками, разрабатываемыми коллективами ученых и разработчиками из разных стран мира, включая Россию.\nУстанавливать новые библиотеки нам придется практически на каждом занятии, поэтому лучше научиться делать это сразу.\nЭти библиотеки хранятся в основном в двух местах:\n\nCRAN\nGithub - нечто вроде социальной сети для программистов, где все друг друга знают, создают совместные проекты и делятся кодом.\n\n\n\n\n\n\n\nКое-что о библиотеке/пакетах\n\n\n\nМы называем “библиотеку” “библиотекой” и подразумеваем под ней набор каких-то полезных утилит, наборов данных и сопутствующей документации, потому что так принято в русскоязычном сегменте Интернета, посвященном программированию.\nОднако, по-английски библиотека называется package, то есть “пакет”, в котором “упакованы” функции, сопровождающие документы и иногда готовые данные, а вот функция, которая этот пакет подключает - `library()` – что собственно и переводится как библиотека, такой вот языковый казус. Об этом стоит помнить и слова эти не путать.\n\n\n\n2.4.1 Как установить библиотеку с помощью CRAN\nЧтобы скачать и установить нужную библиотеку с помощью CRAN, проще всего воспользоваться меню RStudio. Нужно выбрать пункт меню Tools - Install Packages:\n\nЗатем в окне Packages необходимо ввести имя нужной библиотеки, например, dplyr и нажать на кнопку Install. По умолчанию будет стоять “галочка” - Install Dependencies (установить зависимости) - убирать ее не надо, так как это позволить установить не только саму библиотеку, но и другие библиотеки, от которых она зависит и к которым обращается в ходе выполнения функций. В противном случае, могут возникать ошибки, а оно нам надо?\n\n\n\n2.4.2 Как установить библиотеку из Github\nНе все библиотеки доступны на CRAN, так как эта процедура достаточно сложная и строгая, предполагает несколько проверок (кода, сопроводительной документации). Достаточно частая практика, когда библиотека еще не подана для регистрации на CRAN, разработчики помещают ее на GitHub, откуда ее можно скачать и использовать по назначению. Это позволяет разработчикам получить обратную связь, устранять возможные ошибки, улучшать код.\nЧтобы установить нужную библиотеку из GitHub, нам понадобится функция install_github(), в которой мы должны указать имя разработчика и название библиотеки. Однако, чтобы выполнить эту функцию, нужна дополнительная библиотека devtools. Установить ее можно через CRAN с помощью описанного выше способа. А уже затем, загрузив ее, установить нужную нам библиотеку (получается сложновато, зато мы сразу научимся нужным действиям, потом мы доведем их до автоматизма):\n\nlibrary (devtools)\ninstall_github(\"DeveloperName/PackageName\")\n\n\n\n2.4.3 Вопросы для самопроверки\nКакой код нужно написать, чтобы подключить для использования уже установленную библиотеку tidyverse? r fitb(c(“library( tidyverse )”, “library(”tidyverse” )“,”library( ‘tidyverse’ )“), ignore_ws = TRUE, width =”20”)"
  }
]