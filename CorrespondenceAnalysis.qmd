---
title: "Занятия 17-18. Многомерный анализ данных и визуализация его результатов. Часть 2. Анализ соответствий"
output:
  html_document:
    css: style.css
    toc: yes
    toc_depth: 4
    number_sections: true
    theme: united
    toc_float:
      collapsed: no
      smooth_scroll: no
header-includes:
  - \usepackage{xcolor}
  - \usepackage{framed}
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library("factoextra")
library("FactoMineR")
```

# Что из себя представляет анализ соответствий?

Анализ соответствий, по-английски - Correspondence analysis (CA), яляется расширением метода главных компонент, предназначенным для исследования взаимосвязей между качественными (категориальными) переменными. Подобно методу главных компонент, он позволяет обобщить информацию и визуализировать данные в виде двумерных графиков.

В рамках данного занятия мы будем рассматривать пример данных, представленных в виде таблице сопряженности. Координаты, полученные в ходе анализа соответствий будут использоваться для того, чтобы в графическом виде представить ассоциации между строковых и столбцовых элементов. 

Когда мы анализируем двумерную таблицу сопряженности, мы обычно стремимся сопоставить отдельные строки каким-либо столбцам. Например, выявляя различия между различыми типами поведения по полу, мы хотели бы выяснить, какие из них являются "мужскими", а какие "женскими".


Анализ соответствий дает нам такую возможность, поскольку он представляет геометрический подход к визуализации строк и столбцов двумерной таблицы в качестве точек в пространстве меньшей размерности (меньшей - значит, что в нем меньше измерений, чем количество строк или столбцов), так, что расположение точек, соответствующих строкам или столбцам, будет нам показывать их взаимосвязи. Главная цель такого анализа - в наглядном виде представить глобальное видение этих взаимосвязей, удобное для интерпретации.


Мы будем анализировать набор данных, который называется `housetasks`, включенный в библиотеку `factoextra`. Не трудно догадаться, в нем содержатся данные о ведении домашнего хозяйства.

```{r}
data(housetasks)
housetasks
```


Набор данных представляет собой таблицу частот, где в строках содержится описание 13 различных домашних дел и их распределение в супружеской чете:

+ "Laundry" - стирка
+ "Main_meal" - приготовление еды (основное блюдо)
+ "Dinner" - ужин
+ "Breakfeast" - завтрак
+ "Tidying"  - уборка дома
+ "Dishes"   - мытье посуды 
+ "Shopping" - покупки
+ "Official"  - работа с документами
+ "Driving"  - вождение
+ "Finances"  - финансы
+ "Insurance" - страховка
+ "Repairs"   - ремонтные работы
+ "Holidays" - подготовка к праздникам

Строки - разная работа, значения в таблице - частоты, полученные в зависимости от выполнения дел:

+ wife - только женой
+ alternatively - совместно (по очереди)
+ husband - только мужем
+ jointly - совместно (вместе)

![](pic4.png)


# Графическое представление таблицы и тест хи-квадрат

Наша таблица не очень большая, и значит мы легко можем проанализировать профили строк и столбцов.

Очевидно,что стирка, приготовление основного блюда и ужин чаще всего - это женские занятия.

Ремонт и вождение автомобили - преимущественно мужские, а вот к праздникам супруги готовятся чаще вместе.

Давайте представим эти результаты графически с помощью библиотеки `gplots`и функции   `balloonplot()`:

```{r}
library("gplots")
# 1. Переконвертируем данные в таблицу
dt <- as.table(as.matrix(housetasks))
# 2. Сделаем красивый график
balloonplot(t(dt), main ="housetasks", xlab ="", ylab="",
            label = FALSE, show.margins = FALSE)

```

Чтобы проверить данные на наличие взаимосвязи или независимости между двумя признаками, можно обратиться к тесту хи-квадрат, который показывает отклонение наблюдаемых частот от ожидаемых (равномерно распределенных):

```{r}
chisq <- chisq.test(housetasks)
chisq

```
В нашем примере мы видим, что переменные, представленные в строках и столбцах статистически значимо взаимосвязаны (p-value = r chisq$p.value).

# Как провести анализ соответствий в R

Формула очень напоминает метод главных компонент:

```{r}
library("FactoMineR")
res.ca <- CA(housetasks, graph = FALSE)
```

Вывод функции CA() включает следующие результаты:

```{r}
print(res.ca)
```

# Визуализация и интепретация

Функции, которые используются в `factoextra` для извлечения и визуализации данных, очень напоминают те, которые использовались нами в методе главных компонент:

- get_eigenvalue(res.ca): извлекает собственные значения / долю дисперсии, описываемые по каждому измерению (оси)
- fviz_eig(res.ca): визуализация собственных значений
- get_ca_row(res.ca), get_ca_col(res.ca): извлечение результатов отдельно по строкам и столбцам
- fviz_ca_row(res.ca), fviz_ca_col(res.ca): визуализация результатов отдельно по строкам и столбцам
- fviz_ca_biplot(res.ca): биплот


# Собственные значения / дисперсия

Вспомним, что мы рассматриваем собственные значения, чтобы определиться с количеством измерений (компонент, осей), которые мы будем рассматривать.
Собственные значения и соответствующие им доли дисперсии могут быть извлечены с помощью функции `get_eigenvalue()`. У первой оси собственное значение будет максимальным и оно будет уменьшаться для последующих измерений.

```{r}
eig.val <- get_eigenvalue(res.ca)
eig.val
```

Собственные значения описывают количество информации, обобщаемой по каждой оси. Измрения упорядочены по убыванию и приводятся в соответствии с долями дисперсии.

Так же, как и в МГК, собственные значения могут быть использованы для определения оптимального количества осей для анализа.

Хотя единого "рецепта" на этот случай не существует, хороший анализ характеризуется большой долей дисперсии, описываемой через небольшое количество измерений.

В нашем анализе первые два измерения объясняют 88.6% дисперсии, и это достаточно неплохой результат.

Альтернативный метод - посмотреть на график рассеяния, построенный для упорядоченных собственных значений.


```{r}
fviz_screeplot(res.ca, addlabels = TRUE, ylim = c(0, 50))

```

Точка, после которой возникает спад (так называемый “локоть”) означает оптимальную размерность. 

Мы можем также посчитать среднее собственное значение и оставить те измерения (оси), собственные значения по которым выше:

У нас 13 строк и 4 столбца, значит, если бы данные были бы случайно распределены по категориям, то ожидаемое собственное значение по каждому измерению равнялось бы: 1/(nrow(housetasks)-1) = 1/12 = 8.33%.

Точно такую же процедуру нужно провести и по столбцам: 
1/(ncol(housetasks)-1) = 1/3 = 33.33%

В соответствии с рекомендациями (M. T. Bendixen 1995):

Любая ось, вносящая больше вклада, чем максимальное из этих двух процентов, должна рассматриваться в качестве важной и включаться в интерпретацию результатов анализа.

У нас максимальное значение - 33,3%

```{r}
fviz_screeplot(res.ca) +
 geom_hline(yintercept=33.33, linetype=2, color="red")
```

Как хорошо видно на графике, мы должны оставить два измерения. Отметим, что оставшиеся измерения на самом деле нам мало помогут, поскольку их вклад в объяснение изменчивости данных очень мал.

Измерения 1 и 2 объясняют около 48.7% и 39.9% общей инерции (аналог дисперсии для анализа соответствий). В совокупности это составляет 88.6%.

# Биплот

Используем функцию `fviz_ca_biplot()` для визуализации анализа:

```{r}
# repel= TRUE to avoid text overlapping (slow if many point)
fviz_ca_biplot(res.ca, repel = TRUE)

```

Такой график называется симметричным и показывает глобальные паттерны внутри данных.
Строки обозначены синими точками, а колонки - красными треугольниками.

Расстояния между точками на графике является мерой сходства или отличия между ними. Чем ближе точки друг другу, тем теснее взаимосвязь между ними (более сходны профили). 

# График для строк

Аналогичным образом получим и визуализируем результаты для строк.

```{r}
row <- get_ca_row(res.ca)
row
```

Компоненты, содержащиеся в функции `get_ca_row()` могут быть использованы для построения графика:

- row$coord: координаты по каждому измерению (1, 2 and 3). Используются для построения диаграммы рассеяния.
- row$cos2: качесто представленности строк.
- var$contrib: вклад строк в процентах в определение измерений

<div class="alert alert-info" role="alert">
Отметим, что можно визуализировать данные по строкам либо 1) по качеству их представленности в факторной структуре (cos2) или 2) по их вкладу в определение направлений. </div>

Как это сделать?


```{r}
# Координаты
head(row$coord)
# Cos2
head(row$cos2)
# Вклады в измерения
head(row$contrib)
```

## Координаты строк

Визуализируем только строки:


```{r}
fviz_ca_row(res.ca, repel = TRUE)
```

## Качество репрезентации строк

Результаты показывают, что таблица сопряженности была успешно представлена в пространстве меньшей размерности с помощью анализа соответствий, и мы смогли успешно описать 88.6% дисперции (инерции) данных.

Тем не менее, не все точки одинаково хорошо расположились вдоль двух осей (измерений).

Вспомним, что качество представленности переменной (строки) измеряется через показатель 
(cos2 - квадрат косинуса), что аналогично квадрату корреляции (или квадрату координаты по направлению).

Показатель cos2 измеряет степень ассоциации между строками /  столбцами и конкретной осью.

Как этот показатель извлечь?

```{r}
head(row$cos2, 4)

```

Значения cos2 изменяются в диапазоне между 0 и 1. Сумма всех cos2 для всех по всем измерениям равна 1. Чем больше сумма квадратов косинусов для отдельной строки по всем измерениям, тем лучше информация, которую она представляет, описывается полученной моделью.

Давайте эту информацию представим графически:

```{r}
# Color by cos2 values: quality on the factor map
fviz_ca_row(res.ca, col.row = "cos2",
             gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), 
             repel = TRUE)
```


# Альтернативный способ представления значений cos2

Мы можем визуализировать качество представленности строк с помощью библиотеки `corrplot`:

```{r}
library("corrplot")
corrplot(row$cos2, is.corr=FALSE)
```

Еще один вариант - столбчатая диаграмма:

```{r}
fviz_cos2(res.ca, choice = "row", axes = 1:2)
```

# Вклад строк в измерения

Вклад строк (в %) в определение измерений может быть извлечена путем:

```{r}
head(row$contrib)
```

Соответственно, строки с большими значениями вносят больший вклад в определение измерений и являются более важными.

Можем сделать аналогичный корплот:

```{r}
library("corrplot")
corrplot(row$contrib, is.corr=FALSE)    
```

Функция `fviz_contrib()` полезна для анализа вклада по отдельным измерениям:

```{r}
# Вклад строк в измерение 1
fviz_contrib(res.ca, choice = "row", axes = 1, top = 10)
# Вклад строк в измерение 2
fviz_contrib(res.ca, choice = "row", axes = 2, top = 10)

```


Общий вклад в два измерения
```{r}
fviz_contrib(res.ca, choice = "row", axes = 1:2, top = 10)
```


Отметим, что такие дела, как ремонт, стирка, приготовление еды и вождение являются самыми важными по первому измерению.

Тогда как выходные и ремонт - для второго измерения. 

Визуализируем это:

```{r}
fviz_ca_row(res.ca, col.row = "contrib",
             gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), 
             repel = TRUE)
```

Данный график может нам дать некоторые идеи по поводу содержания осей. 
Очевидно, что первая ось - собственно делит наши занятия на мужские и женские - по критерию физического труда (интеллектуальной активности) - рутинного труда. Второе измерение скорее охватывает аспекты совместной деятельности или одиночной (водить машину вдвоем довольно затруднительно.

# Представление переменных по столбцам

Чтобы извлечь результаты по вариантам ответа, представленным в столбцах, понадобится функция `get_ca_col()`:

```{r}
col <- get_ca_col(res.ca)
col
```

Чтобы обратиться к отдельным компонентам вывода, нужно набрать:

```{r}
# Координаты
head(col$coord)
# Качество репрезентации
head(col$cos2)
# Вклады
head(col$contrib)
```


## Графики качества и вклада

Воспользуемся аналогичными функциями визуализации, чтобы провести анализ качества и вклада по столбцам:

```{r}
fviz_ca_col(res.ca, col.col = "cos2", 
             gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
             repel = TRUE)

```



```{r}
fviz_cos2(res.ca, choice = "col", axes = 1:2)
```

Судя по нашим результатам, вариант ответа "по очереди" (Alternating) представлен первыми двумя измерениями не самым наилучшим образом. 


Чтобы визуализировать вклад столбцов в первые два фактора, можно использовать следующий код:

```{r}
fviz_contrib(res.ca, choice = "col", axes = 1:2)
```

Результаты - аналогичные. График еще раз подтвердил, что наибольший вклад вносят три варианта ответа - "муж", "жена" и "совместные действия".


# Делаем биплот

Аналогично тому, как мы делали биплот в ходе анализа методом главных компонент, можно визуализировать результаты анализа соответствий.

Стандартным являтся симметричный биплот, в котором строки (синие точки) и столбцы (красные треугольники) представлены в одном пространстве на основе главных координат, показывающих их профили. В этом случае, только расстояние между точками одной группы может быть реально проинтерпретировано, тогда как расстояния между строками и столбцами интерпретировать напрямую некорректно, можно делать только самые общие выводы и обобщения.

```{r}
fviz_ca_biplot(res.ca, repel = TRUE)
```

# Биплот, учитывающий вклад переменных

В стандартном симметричном биплоте, который мы только что сделали, довольно трудно понять, какие точки (переменные) вносят больший вклад в полученную модель.

Майкл Гринэкр (Michael Greenacre) предложил новый тип шкалирования (масштабирования), получивший название "биплот вкладов" (contribution biplot), который позволяет визуализировать эти моменты (M. Greenacre 2013). При таком отображении, точки, которые вносят маленький вклад и являющиеся не очень важными, располагаются ближе к центру координат.

Такой график можно получить, задав аргумент  `map = “rowgreen”` или `map = “colgreen”`.


```{r}
fviz_ca_biplot(res.ca, map ="colgreen", arrow = c(TRUE, FALSE),
               repel = TRUE)
```

В принципе, графики - аналогичны предыдущему, в них лишь ставится больший акцент на значимости переменных.


# Описание измерений

Чтобы понять, какие строки или столбцы в большей степени связаны с главными измерениями, можно подробно исследовать информацию по каждому из них, что удобно сделать с помощью функции `dimdesc()`(FactoMineR). Строки и столбцы в выводе отсортировываются по их координатам.

```{r}
res.desc <- dimdesc(res.ca, axes = c(1,2))
```

# Самостоятельная работа

Провести анализ соответствий по набору данных `children`, встренному в библиотеку FactoMineR. Набор содержит ответы на вопрос: По каким причинам женщина или пара могут отказаться от рождения детей? В строках - сами причины, в столбцах - разные категории респондентов - по возрасту (последние три колонки - 30-летние, 50-летние и старше 50), образованию (необразованные, с профессиональным сертификатом - cep, bepc - это что-то вроде аналога нашего бакалавариата - экзамена, который сдается после первой ступени обучения в университете, диплом высшей школы, университет).

Важно! С 15 по 18 строки - будут дополнительными, 6 по 8 столбцы тоже, то есть сначала надо разделить на два набора или сразу указать, как положено.

Сделать сам анализ и к нему - шесть графиков - по строкам, по столбцам и биплот (по качеству и по вкладам). 
```{r}
data(children)
head(children)
```

